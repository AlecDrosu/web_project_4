!function(){"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formEl=n}var n,r;return n=t,(r=[{key:"_checkIfInputValid",value:function(e){return e.validity.valid}},{key:"_checkInputValidity",value:function(e){var t=this._formEl.querySelector("#".concat(e.id,"-error"));this._checkIfInputValid(e)?(e.classList.remove(this._inputErrorClass),t.innerText="",t.classList.remove(this._errorClass)):(e.classList.add(this._inputErrorClass),t.innerText=e.validationMessage,t.classList.add(this._errorClass))}},{key:"_toggleButtonState",value:function(e,t){var n=this;e.every((function(e){return n._checkIfInputValid(e)}))?(t.classList.remove(this._inactiveButtonClass),t.disabled=!1):(t.classList.add(this._inactiveButtonClass),t.disabled=!0)}},{key:"_setupEventListeners",value:function(){var e=this,t=Array.from(this._formEl.querySelectorAll(this._inputSelector)),n=this._formEl.querySelector(this._submitButtonSelector);t.forEach((function(r){r.addEventListener("input",(function(){e._checkInputValidity(r),e._toggleButtonState(t,n)}))})),this._toggleButtonState(t,n)}},{key:"enableValidation",value:function(){this._formEl.addEventListener("submit",(function(e){e.preventDefault()})),this._setupEventListeners()}}])&&e(n.prototype,r),t}();function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var r=function(){function e(t,n,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._title=t.title,this._image=t.image,this._handleCardClick=r,this._cardSelector=n}var t,r;return t=e,(r=[{key:"_getTemplate",value:function(){return document.querySelector(this._cardSelector).content.querySelector(".element").cloneNode(!0)}},{key:"_setupEventListeners",value:function(){var e=this;this._element.querySelector(".element__img").addEventListener("click",(function(){return e._handleCardClick({name:e._title,link:e._image})})),this._element.querySelector(".element__trash").addEventListener("click",(function(){return e._handleDelete()})),this._element.querySelector(".text__heart").addEventListener("click",(function(){return e._handleLike()}))}},{key:"_handleLike",value:function(){this._element.querySelector(".text__heart").classList.toggle("text__heart_active")}},{key:"_handleDelete",value:function(){this._element.remove()}},{key:"generateCard",value:function(){return this._element=this._getTemplate(),this._setupEventListeners(),this._element.querySelector(".text__label").textContent=this._title,this._element.querySelector(".element__img").src=this._image,this._element.querySelector(".element__img").alt=this._title,this._element}}])&&n(t.prototype,r),e}();function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var i=function(){function e(t){var n=t.userNameSelector,r=t.userJobSelector,o=t.avatarSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._userName=document.querySelector(n),this._userJob=document.querySelector(r),this._userAvatar=document.querySelector(o)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._userName.textContent,job:this._userJob.textContent}}},{key:"setUserInfo",value:function(e){var t=e.name,n=e.job;this._userName.textContent=t,this._userJob.textContent=n}},{key:"setUserAvatar",value:function(e){var t=e.avatar;this._userAvatar.src=t}}])&&o(t.prototype,n),e}();function a(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var u=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popupElement=document.querySelector(t),this._handleKeyDown=this._handleKeyDown.bind(this)}var t,n;return t=e,(n=[{key:"_handleKeyDown",value:function(e){"Escape"===e.key&&this.close()}},{key:"setEventListeners",value:function(){var e=this;this._popupElement.addEventListener("click",(function(t){(t.target.classList.contains("modal__overlay")||t.target.classList.contains("modal__close-btn"))&&e.close()}))}},{key:"open",value:function(){this._popupElement.classList.add("modal_is-open"),document.addEventListener("keydown",this._handleKeyDown)}},{key:"close",value:function(){this._popupElement.classList.remove("modal_is-open"),document.removeEventListener("keydown",this._handleKeyDown)}}])&&a(t.prototype,n),e}();function c(e){return c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},c(e)}function l(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function s(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function f(e,t,n){return f="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=h(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}},f(e,t,n||e)}function p(e,t){return p=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},p(e,t)}function y(e,t){if(t&&("object"===c(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function h(e){return h=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},h(e)}var _=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&p(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=h(r);if(o){var n=h(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return y(this,e)});function a(){return l(this,a),i.apply(this,arguments)}return t=a,(n=[{key:"open",value:function(e){var t=e.link,n=e.name;this._image=this._popupElement.querySelector(".modal__img"),this._caption=this._popupElement.querySelector(".modal__caption").textContent=n,this._image.src=t,this._image.alt=n,f(h(a.prototype),"open",this).call(this)}}])&&s(t.prototype,n),a}(u);function d(e){return d="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},d(e)}function m(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function v(e,t,n){return v="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=g(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}},v(e,t,n||e)}function b(e,t){return b=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},b(e,t)}function S(e,t){if(t&&("object"===d(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function g(e){return g=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},g(e)}var E=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&b(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=g(r);if(o){var n=g(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return S(this,e)});function a(e){var t,n=e.handleFormSubmit,r=e.popupSelector;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,r))._handleFormSubmit=n,t}return t=a,(n=[{key:"_getInputValues",value:function(){var e={};return Array.from(this._popupElement.querySelectorAll(".form__input")).forEach((function(t){e[t.name]=t.value})),e}},{key:"_handleSubmit",value:function(){this._handleFormSubmit(this._getInputValues())}},{key:"setEventListeners",value:function(){v(g(a.prototype),"setEventListeners",this).call(this),this._popupElement.querySelector(".form").addEventListener("submit",this._handleSubmit.bind(this))}},{key:"close",value:function(){v(g(a.prototype),"close",this).call(this),this._popupElement.querySelector(".form").reset()}}])&&m(t.prototype,n),a}(u);function w(e){return w="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},w(e)}function k(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function O(e,t,n){return O="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=L(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}},O(e,t,n||e)}function j(e,t){return j=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},j(e,t)}function C(e,t){if(t&&("object"===w(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function L(e){return L=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},L(e)}var q=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&j(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=L(r);if(o){var n=L(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return C(this,e)});function a(e){var t,n=e.handleConfirm,r=e.popupSelector;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,r))._handleConfirm=n,t}return t=a,(n=[{key:"setEventListeners",value:function(){var e=this;O(L(a.prototype),"setEventListeners",this).call(this),this._popupElement.querySelector(".form__submit").addEventListener("click",(function(){e._handleConfirm(),e.close()}))}}])&&k(t.prototype,n),a}(u);function P(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var R=function(){function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._items=r,this._renderer=o,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"renderItems",value:function(){var e=this;this._items.forEach((function(t){e._renderer(t)}))}},{key:"addItem",value:function(e){this._container.prepend(e)}}])&&P(t.prototype,n),e}();function T(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var I=function(){function e(t){var n=t.baseUrl,r=t.cardUrl,o=t.headers;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._baseUrl=n,this._cardUrl=r,this._headers=o}var t,n;return t=e,(n=[{key:"getCards",value:function(){return fetch(this._cardUrl,{headers:this._headers}).then((function(e){return e.ok?e.json():new Promise.reject("Error: ".concat(e.status))}))}},{key:"createCard",value:function(e){return fetch(this._cardUrl,{method:"POST",headers:this._headers,body:JSON.stringify(e)}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))})).catch((function(e){console.log(e)}))}},{key:"deleteCard",value:function(e){var t=e.cardId;return fetch("".concat(this._cardUrl,"/").concat(t),{method:"DELETE",headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"editProfile",value:function(e){var t=e.name,n=e.about;return fetch(this._baseUrl,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:n})}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}}])&&T(t.prototype,n),e}(),x=document.querySelector(".title__button"),B=document.querySelector(".modal_type_edit"),U=document.querySelector(".modal_type_add"),D=B.querySelector(".form"),V=U.querySelector(".form"),A=document.querySelector(".modal_type_edit-pic").querySelector(".form"),N=document.querySelector("#list-title"),J=document.querySelector("#list-subtitle"),F=document.querySelector("#image-url"),K=V.querySelector(".form__input_type_title"),z=V.querySelector(".form__input_type_image-url"),H=document.querySelector(".profile__button"),M=(document.querySelector(".element__trash"),document.querySelector(".profile__avatar_edit")),G=(document.querySelector(".profile__avatar"),new I({baseUrl:"https://around.nomoreparties.co/v1/group-11/users/me",cardUrl:"https://around.nomoreparties.co/v1/group-11/cards",headers:{authorization:"807a4335-951b-4493-9e81-0010a6738faf","Content-Type":"application/json"}}));G.getCards().then((function(e){console.log(e),e.forEach((function(e){te({title:e.name,image:e.link})}))}));var Q=new R({items:G.getCards(),renderer:function(e){return te(e)}},".elements");G.editProfile(N.value,J.value).then((function(e){W.setUserInfo({name:e.name,job:e.about}),W.setUserAvatar({avatar:e.avatar})}));var W=new i({userNameSelector:".title__name",userJobSelector:".info__job",avatarSelector:".profile__avatar"}),X=new E({popupSelector:".modal_type_edit",handleFormSubmit:function(){W.setUserInfo({name:N.value,job:J.value}),X.close()}}),Y=new q({popupSelector:".modal_type_confirm",handleConfirmClick:function(){deleteCard(cardId),Y.close()}});X.setEventListeners();var Z=new E({popupSelector:".modal_type_edit-pic",handleFormSubmit:function(){W.setUserAvatar({avatar:F.value}),Z.close()}});Z.setEventListeners();var $=new E({popupSelector:".modal_type_add",handleFormSubmit:function(){te({title:K.value,image:z.value}),$.close()}});$.setEventListeners(),x.addEventListener("click",(function(){var e=W.getUserInfo(),t=e.name,n=e.job;N.value=t,J.value=n,X.open()}));var ee=new _(".modal_type_preview");function te(e){var t=new r(e,"#elementTemplate",(function(e){ee.open(e)})).generateCard();Q.addItem(t)}ee.setEventListeners(),M.addEventListener("click",(function(){return Z.open()})),H.addEventListener("click",(function(){return $.open()}));var ne={inputSelector:".form__input",submitButtonSelector:".form__submit",inactiveButtonClass:"form__submit_inactive",inputErrorClass:"form__input_type_error",errorClass:"popup__error_visible"};new t(ne,V).enableValidation(),new t(ne,D).enableValidation(),new t(ne,A).enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,